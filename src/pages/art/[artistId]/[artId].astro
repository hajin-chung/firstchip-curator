---
import ArrowButton from "@components/ArrowButton.astro";
import { Pencil } from "@components/icons/Pencil";
import { Trash } from "@components/icons/Trash";
import Layout from "@layouts/Layout.astro";
import { getArtById, getAuthDataBySessionId } from "@lib/server";

const { artistId, artId } = Astro.params;

if (typeof artId !== "string" || typeof artistId !== "string") {
  return Astro.redirect("/500");
}

const { art, artist, images } = await getArtById(artId, artistId);

if (art === undefined || artist === undefined) {
  return Astro.redirect("/404");
}

const { isAuthed, artist: authData } = await getAuthDataBySessionId(
  Astro.cookies.get("session").value
);
---

<Layout title={art.name}>
  <div>
    <ArrowButton
      text={`${artist.name}의 작품 보러가기`}
      href={`/art/${art.artistId}`}
    />
  </div>
  <div class="w-full max-h-[540px] flex flex-col">
    {
      images &&
        images.map((image) => (
          <img
            src={image}
            class="img drop-shadow-2xl rounded-lg self-center max-h-full"
          />
        ))
    }
  </div>
  <div class="flex flex-col gap-[2px] mx-3 my-5 items-start">
    <h2 class="text-2xl font-extrabold">{art.name}</h2>
    <a href={`/art/${art.artistId}`} class="text-xl font-bold mb-5">
      {artist.name}
    </a>
    <p class="whitespace-pre-line">{art.description}</p>
  </div>
  {
    isAuthed && authData && (
      <div class="flex gap-4 self-end">
        <a
          href={`/me/art/${artId}`}
          class="h-8 w-8 p-1 border-[1px] rounded-lg btn-red"
        >
          <Trash />
        </a>
        <a
          href={`/me/art/${artId}`}
          class="h-8 w-8 p-1 border-[1px] rounded-lg btn"
        >
          <Pencil />
        </a>
      </div>
    )
  }
</Layout>
