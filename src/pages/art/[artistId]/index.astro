---
import ArrowButton from "@components/ArrowButton.astro";
import Layout from "@layouts/Layout.astro";
import { getArtistById, getAuthDataBySessionId } from "@lib/server";

const { artistId } = Astro.params;

if (typeof artistId !== "string") {
  return Astro.redirect("/500");
}

const { artist, arts } = await getArtistById(artistId);

if (artist === undefined) {
  return Astro.redirect("/404");
}

const { isAuthed, artist: authData } = await getAuthDataBySessionId(
  Astro.cookies.get("session").value
);
---

<Layout title={`${artist.name}`}>
  <div>
    <ArrowButton text="홈으로 돌아가기" href="/" />
  </div>
  <img
    src={artist.picture}
    class="h-20 w-20 rounded-full border-2 border-black dark:border-white p-[1px] object-cover"
  />
  <div class="flex flex-col mx-1 mt-4 w-full">
    <div class="text-2xl font-bold">{artist.name}</div>
    <p class="whitespace-pre-line">{artist.description}</p>
    {
      isAuthed && authData && authData.artistId === artistId && (
        <div class="flex gap-4 justify-end w-full">
          <a href="/art/new" class="rounded-full border-[1px] px-2 py-1 btn">
            작품 추가하기
          </a>
          <a href="/me/profile" class="rounded-full border-[1px] px-2 py-1 btn">
            프로필 수정하기
          </a>
        </div>
      )
    }
    <p class="text-lg font-bold mt-10">작품 목록</p>
    <div class="flex flex-col gap-1 mt-4 items-start">
      {
        arts.map(({ id, name }) => (
          <a
            class="flex gap-2 items-center p-1 hover-bg"
            href={`/art/${artist.id}/${id}`}
          >
            {name}
          </a>
        ))
      }
    </div>
    {
      arts.length === 0 && (
        <div class="self-center text-gray-500 mt-10">작품 없음</div>
      )
    }
  </div>
</Layout>
