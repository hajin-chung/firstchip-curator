---
import LayoutWithHeader from "@layouts/LayoutWithHeader.astro";
import { ArtistDescription } from "@components/ArtistDescription";
import { getArtistById, getAuthDataBySessionId } from "@lib/server";
import { ArtList } from "@components/ArtList";

const { artistId } = Astro.params;

if (typeof artistId !== "string") {
  return Astro.redirect("/500");
}

const [artist, { isAuthed, artist: authData }] = await Promise.all([
  getArtistById(artistId),
  getAuthDataBySessionId(Astro.cookies.get("session").value),
]);

if (artist === undefined) {
  return Astro.redirect("/404");
}

const isMyProfile = isAuthed && authData && authData.artistId === artistId;
---

<LayoutWithHeader title={`${artist.name}`}>
  <div class="h-8"></div>
  <img
    class="w-full rounded-lg top-0 left-0 h-[240px] object-cover -z-10 bg-gradient-to-b"
    src={`/image?id=header-${artist.id}`}
  />
  <div class="relative w-full">
    <img
      src={artist.picture}
      class="h-20 w-20 absolute -top-10 left-4 rounded-full border-2 border-black dark:border-white p-[1px] object-cover"
    />
    <div class="flex gap-4 justify-end w-full mt-2 pl-28 flex-wrap h-8">
      {
        isMyProfile && (
          <>
            <a href="/art/new" class="rounded-full border-[1px] px-2 py-1 btn">
              작품 추가하기
            </a>
            <a
              href="/me/profile"
              class="rounded-full border-[1px] px-2 py-1 btn"
            >
              프로필 수정하기
            </a>
          </>
        )
      }
    </div>
  </div>
  <div class="flex flex-col mt-4 w-full px-4">
    <div class="text-2xl font-bold mb-2">{artist.name}</div>
    <ArtistDescription
      description={artist.description}
      history={artist.history}
      client:load
    />
    <ArtList artistId={artistId} client:load />
  </div>
</LayoutWithHeader>
